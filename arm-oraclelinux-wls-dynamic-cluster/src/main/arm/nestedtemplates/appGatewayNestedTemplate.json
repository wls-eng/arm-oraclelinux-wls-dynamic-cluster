{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"appGatewaySSLCertificateData": {
			"type": "string"
		},
		"appGatewaySSLCertificatePassword": {
			"type": "string"
		},
		"gatewayPublicIPAddressName": {
			"defaultValue": "gwip",
			"type": "string",
			"metadata": {
				"description": "Public IP Name for the Application Gateway"
			}
		},
		"location": {
			"type": "string",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"managedServerPrefix": {
			"defaultValue": "msp",
			"type": "string",
			"metadata": {
				"description": "Provide managed server prefix names"
			}
		},
		"numberOfInstances": {
			"defaultValue": 2,
			"type": "int",
			"minValue": 2,
			"maxValue": 5,
			"metadata": {
				"description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
			}
		},
                "wlsDomainName": {
                        "defaultValue": "wlsd",
			"type": "string",
			"metadata": {
				"description": "Provide Weblogic domain name"
			}
		}
	},
	"variables": {
		"const_appGatewayFrontEndHTTPPort": 80,
		"const_appGatewayFrontEndHTTPSPort": 443,
		"const_backendPort": 8001,
		"const_managedVMPrefix": "[concat(parameters('managedServerPrefix'),'VM')]",
		"name_appGateway": "myAppGateway",
		"name_appGatewayCertificate": "appGwSslCertificate",
		"name_appGatewaySubnet": "appGatewaySubnet",
		"name_backendAddressPool": "myGatewayBackendPool",
		"name_frontEndIPConfig": "appGwPublicFrontendIp",
		"name_httpListener": "HTTPListener",
		"name_httpPort": "http_port",
		"name_httpSetting": "myHTTPSetting",
		"name_httpsListener": "HTTPSListener",
		"name_httpsPort": "https_port",
		"name_probe": "HTTPhealthProbe",
		"name_virtualNetwork": "[concat(parameters('wlsDomainName'),'_VNET')]",
		"ref_appGatewayPublicIP": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPAddressName'))]",
		"ref_appGatewaySubnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('name_appGatewaySubnet'))]",
		"ref_backendAddressPool": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('name_appGateway'),variables('name_backendAddressPool'))]",
		"ref_backendHttpSettings": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('name_appGateway'),variables('name_httpSetting'))]",
		"ref_backendProbe": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('name_appGateway'),variables('name_probe'))]",
		"ref_frontendHTTPPort": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('name_appGateway'),variables('name_httpPort'))]",
		"ref_frontendHTTPSPort": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('name_appGateway'),variables('name_httpsPort'))]",
		"ref_frontendIPConfiguration": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('name_appGateway'),variables('name_frontEndIPConfig'))]",
		"ref_httpListener": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('name_appGateway'),variables('name_httpListener'))]",
		"ref_httpsListener": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('name_appGateway'),variables('name_httpsListener'))]",
		"ref_sslCertificate": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('name_appGateway'),variables('name_appGatewayCertificate'))]"
	},
	"resources": [
		{
			"apiVersion": "2019-10-01",
			"name": "${cluster.appgateway.start}",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": [
					]
				}
			}
		},
		{
			"type": "Microsoft.Network/applicationGateways",
			"apiVersion": "2019-06-01",
			"name": "[variables('name_appGateway')]",
			"location": "[parameters('location')]",
			"properties": {
				"sku": {
					"name": "WAF_v2",
					"tier": "WAF_v2"
				},
				"gatewayIPConfigurations": [
					{
						"name": "appGatewayIpConfig",
						"properties": {
							"subnet": {
								"id": "[variables('ref_appGatewaySubnet')]"
							}
						},
						"type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
					}
				],
				"frontendIPConfigurations": [
					{
						"name": "appGwPublicFrontendIp",
						"type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
						"properties": {
							"publicIPAddress": {
								"id": "[variables('ref_appGatewayPublicIP')]"
							}
						}
					}
				],
				"frontendPorts": [
					{
						"name": "http_port",
						"properties": {
							"port": "[int(variables('const_appGatewayFrontEndHTTPPort'))]"
						},
						"type": "Microsoft.Network/applicationGateways/frontendPorts"
					},
					{
						"name": "https_port",
						"properties": {
							"port": "[int(variables('const_appGatewayFrontEndHTTPSPort'))]"
						},
						"type": "Microsoft.Network/applicationGateways/frontendPorts"
					}
				],
				"sslCertificates": [
					{
						"name": "appGwSslCertificate",
						"properties": {
						    "data": "[parameters('appGatewaySSLCertificateData')]",
						    "password": "[parameters('appGatewaySSLCertificatePassword')]"                                                    
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "myGatewayBackendPool",
						"properties": {
							"copy": [
								{
									"name": "BackendAddresses",
									"count": "[sub(int(parameters('numberOfInstances')),1)]",
									"input": {
										"fqdn": "[concat(variables('const_managedVMPrefix'), copyIndex('BackendAddresses',1))]"
									}
								}
							]
						},
						"type": "Microsoft.Network/applicationGateways/backendAddressPools"
					}
				],
				"backendHttpSettingsCollection": [
					{
						"name": "myHTTPSetting",
						"properties": {
							"provisioningState": "Succeeded",
							"port": "[int(variables('const_backendPort'))]",
							"protocol": "Http",
							"cookieBasedAffinity": "Enabled",
							"pickHostNameFromBackendAddress": true,
							"affinityCookieName": "ApplicationGatewayAffinity",
							"requestTimeout": 20,
							"probe": {
								"id": "[variables('ref_backendProbe')]"
							}
						},
						"type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
					}
				],
				"httpListeners": [
					{
						"name": "HTTPListener",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('ref_frontendIPConfiguration')]"
							},
							"frontendPort": {
								"id": "[variables('ref_frontendHTTPPort')]"
							},
							"protocol": "Http",
							"requireServerNameIndication": false
						},
						"type": "Microsoft.Network/applicationGateways/httpListeners"
					},
					{
						"name": "HTTPSListener",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('ref_frontendIPConfiguration')]"
							},
							"frontendPort": {
								"id": "[variables('ref_frontendHTTPSPort')]"
							},
							"protocol": "Https",
							"requireServerNameIndication": false,
							"SslCertificate": {
								"id": "[variables('ref_sslCertificate')]"
							}
						},
						"type": "Microsoft.Network/applicationGateways/httpListeners"
					}

				],
				"requestRoutingRules": [
					{
						"name": "HTTPRoutingRule",
						"properties": {
							"ruleType": "Basic",
							"httpListener": {
								"id": "[variables('ref_httpListener')]"
							},
							"backendAddressPool": {
								"id": "[variables('ref_backendAddressPool')]"
							},
							"backendHttpSettings": {
								"id": "[variables('ref_backendHttpSettings')]"
							}
						},
						"type": "Microsoft.Network/applicationGateways/requestRoutingRules"
					},
					{
						"name": "HTTPSRoutingRule",
						"properties": {
							"ruleType": "Basic",
							"httpListener": {
								"id": "[variables('ref_httpsListener')]"
							},
							"backendAddressPool": {
								"id": "[variables('ref_backendAddressPool')]"
							},
							"backendHttpSettings": {
								"id": "[variables('ref_backendHttpSettings')]"
							}
						},
						"type": "Microsoft.Network/applicationGateways/requestRoutingRules"
					}
				],
				"probes": [
					{
						"name": "HTTPhealthProbe",
						"properties": {
							"protocol": "Http",
							"path": "/weblogic/ready",
							"interval": 30,
							"timeout": 30,
							"unhealthyThreshold": 3,
							"pickHostNameFromBackendHttpSettings": true,
							"minServers": 0,
							"match": {
								"statusCodes": [
									"200-399"
								]
							}
						},
						"type": "Microsoft.Network/applicationGateways/probes"
					}
				],
				"enableHttp2": false,
				"autoscaleConfiguration": {
					"minCapacity": 2,
					"maxCapacity": 3
				}
			}
		},
		{
			"apiVersion": "2019-10-01",
			"name": "${cluster.appgateway.end}",
			"type": "Microsoft.Resources/deployments",
			"dependsOn": [ "[resourceId('Microsoft.Network/applicationGateways', variables('name_appGateway'))]" ],
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": [
					]
				}
			}
		}		
	],
	"outputs": {
		"appGatewayURL": {
			"type": "string",
			"value": "[concat('http://',reference(variables('ref_appGatewayPublicIP'), '2019-11-01').dnsSettings.fqdn)]"
		}
	}
}
