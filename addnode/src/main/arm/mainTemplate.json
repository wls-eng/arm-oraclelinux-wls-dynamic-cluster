{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "_artifactsLocation": {
         "type": "string",
         "metadata": {
            "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
         },
         "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
         "type": "securestring",
         "metadata": {
            "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
         },
         "defaultValue": ""
      },
      "adminUsername": {
         "type": "string",
         "metadata": {
            "description": "User name for the Virtual Machine."
         }
      },
      "authenticationType": {
         "type": "string",
         "defaultValue": "password",
         "allowedValues": [
            "sshPublicKey",
            "password"
         ],
         "metadata": {
            "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
         }
      },
      "adminPasswordOrKey": {
         "type": "securestring",
         "metadata": {
            "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
         }
      },
      "acceptOTNLicenseAgreement": {
         "type": "string",
         "metadata": {
            "description": "Do you agree to provide OTN credentials to accept OTN License Agreement? Enter Y or y to agree, else N or n"
         }
      },
      "numberOfNodes": {
         "type": "int",
         "defaultValue": 1,
         "minValue": 1,
         "maxValue": 60,
         "metadata": {
            "description": "The number of nodes to add."
         }
      },
      "otnAccountUsername": {
         "type": "string",
         "metadata": {
            "description": "Username for your Oracle Technology Network account"
         }
      },
      "otnAccountPassword": {
         "type": "securestring",
         "metadata": {
            "description": "Password for your Oracle Technology Network account"
         }
      },
      "wlsDomainName": {
         "type": "string",
         "metadata": {
            "description": "Provide existing running Weblogic domain name"
         }
      },
      "wlsUserName": {
         "type": "string",
         "metadata": {
            "description": "Username for your Weblogic domain name"
         }
      },
      "wlsPassword": {
         "type": "securestring",
         "metadata": {
            "description": "Password for your Weblogic domain name"
         }
      },
      "managedServerPrefix": {
         "type": "string",
         "metadata": {
            "description": "Provide managed server prefix"
         }
      },
      "adminURL": {
         "type": "string",
         "metadata": {
            "description": "Provide admin URL with vm0_publicip:7001"
         }
      },
      "dnsLabelPrefix": {
         "type": "string",
         "metadata": {
            "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
         }
      },
      "guidValue": {
         "type": "string",
         "defaultValue": "[newGuid()]"
      },
      "guidValueShort": {
         "type": "string",
         "defaultValue": "[take(replace(parameters('guidValue'),'-',''),6)]"
      },
      "linuxOSVersion": {
         "type": "string",
         "defaultValue": "7.4",
         "allowedValues": [
            "7.4",
            "7.3"
         ],
         "metadata": {
            "description": "The Oracle Linux version for the VM. This will pick a fully patched image of this given Oracle Linux version."
         }
      },
      "location": {
         "type": "string",
         "defaultValue": "[resourceGroup().location]",
         "metadata": {
            "description": "Location for all resources."
         }
      },
      "vmSizeSelect": {
         "type": "string",
         "defaultValue": "Standard_A3",
         "allowedValues": [
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4"
         ],
         "metadata": {
            "description": "Select appropriate VM Size as per requirement (Standard_A1, Standard_A2, Standard_A3, Standard_A4)"
         }
      }
   },
   "variables": {
      "imagePublisher": "Oracle",
      "imageOffer": "Oracle-Linux",
      "nicName": "_NIC",
      "storageAccountName": "[concat('storage',uniquestring(resourceGroup().id))]",
      "subnetName": "Subnet",
      "storageAccountType": "Standard_LRS",
      "vmName": "[concat(parameters('managedServerPrefix'),parameters('guidValueShort'))]",
      "publicIPAddressName": "[concat(variables('vmName'),'_PublicIP')]",
      "publicIPAddressType": "Dynamic",
      "vmSize": "[parameters('vmSizeSelect')]",
      "virtualNetworkName": "[concat(parameters('wlsDomainName'),'_VNET')]",
      "oradownScript": "oradown.sh",
      "ScriptFileName": "addNodeToDynamicCluster.sh",
      "linuxConfiguration": {
         "disablePasswordAuthentication": true,
         "ssh": {
            "publicKeys": [
               {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPasswordOrKey')]"
               }
            ]
         }
      },
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
   },
   "resources": [
      {
         "apiVersion": "2019-10-01",
         "name": "${tracking.pid}",
         "type": "Microsoft.Resources/deployments",
         "properties": {
            "mode": "Incremental",
            "template": {
               "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion": "1.0.0.0",
               "resources": [
               ]
            }
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2019-06-01",
         "name": "[variables('storageAccountName')]",
         "location": "[parameters('location')]",
         "sku": {
            "name": "[variables('storageAccountType')]"
         },
         "kind": "Storage",
         "properties": {
         }
      },
      {
         "type": "Microsoft.Network/publicIPAddresses",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('publicIPAddressName'), copyIndex(1))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "publicIPLoop",
            "count": "[parameters('numberOfNodes')]"
         },
         "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
               "domainNameLabel": "[concat(toLower(parameters('dnsLabelPrefix')),'-',toLower(variables('vmName')),'-',toLower(parameters('wlsDomainName')), copyIndex(1))]"
            }
         }
      },
      {
         "type": "Microsoft.Network/virtualNetworks/subnets",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('virtualNetworkName'), '/', variables('subnetName'))]",
         "condition": "[and(empty(variables('virtualNetworkName')), empty(variables('subnetName')))]"
      },
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('vmName'),variables('nicName'), copyIndex(1))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "nicLoop",
            "count": "[parameters('numberOfNodes')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'), copyIndex(1)))]"
         ],
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "privateIPAllocationMethod": "Dynamic",
                     "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex(1)))]"
                     },
                     "subnet": {
                        "id": "[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2019-12-01",
         "name": "[concat(variables('vmName'), copyIndex(1))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "virtualMachineLoop",
            "count": "[parameters('numberOfNodes')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('vmName'),variables('nicName'),copyIndex(1)))]"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "[variables('vmSize')]"
            },
            "osProfile": {
               "computerName": "[concat(variables('vmName'), copyIndex(1))]",
               "adminUsername": "[parameters('adminUsername')]",
               "adminPassword": "[parameters('adminPasswordOrKey')]",
               "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "storageProfile": {
               "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('linuxOSVersion')]",
                  "version": "latest"
               },
               "osDisk": {
                  "createOption": "FromImage"
               },
               "dataDisks": [
                  {
                     "diskSizeGB": 900,
                     "lun": 0,
                     "createOption": "Empty"
                  }
               ]
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName'),variables('nicName'), copyIndex(1)))]"
                  }
               ]
            },
            "diagnosticsProfile": {
               "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
               }
            }
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines/extensions",
         "name": "[concat(variables('vmName'), copyIndex(1), '/newuserscript')]",
         "apiVersion": "2019-12-01",
         "location": "[parameters('location')]",
         "copy": {
            "name": "virtualMachineExtensionLoop",
            "count": "[parameters('numberOfNodes')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmName'),copyIndex(1)))]"
         ],
         "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                    "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat('scripts/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken')))]",
                        "[uri(parameters('_artifactsLocation'), concat('scripts/', variables('oradownScript'), parameters('_artifactsLocationSasToken')))]"
                    ],
                    "commandToExecute": "[concat('sh',' ',variables('ScriptFileName'),' ',parameters('acceptOTNLicenseAgreement'),' ',parameters('otnAccountUsername'),' ',parameters('otnAccountPassword'),' ',parameters('wlsDomainName'),' ',parameters('adminURL'),' ',parameters('wlsUserName'),' ',parameters('wlsPassword'))]"
            }
         }
      }
   ],
   "outputs": {
      "wlsDomainLocation": {
         "type": "string",
         "value": "[concat('/u01/domains/', parameters('wlsDomainName'))]"
      }
   }
}
