{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
     "parameters":{
         "_artifactsLocation":{
             "type":"string",
             "metadata":{
                 "description":"The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
             },
             "defaultValue":"${artifactsLocationBase}/arm-oraclelinux-wls-dynamic-cluster/${git.tag}/addnode/src/main/scripts/"
         },
         "_artifactsLocationSasToken": {
             "type": "securestring",
             "metadata": {
                 "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
             },
             "defaultValue": ""
         },
         "adminUsername":{
             "type":"string",
             "metadata":{
                 "description":"User name for the Virtual Machine."
             }
         },
         
         "authenticationType":{
             "type":"string",
             "defaultValue":"password",
             "allowedValues":[
                 "sshPublicKey",
                 "password"
             ],
             "metadata":{
                 "description":"Type of authentication to use on the Virtual Machine. SSH key is recommended."
             }
         },
         "adminPasswordOrKey":{
             "type":"securestring",
             "metadata":{
                 "description":"SSH Key or password for the Virtual Machine. SSH key is recommended."
             }
         },
         "acceptOTNLicenseAgreement":{
             "type":"string",
             "metadata":{
                 "description":"Do you agree to provide OTN credentials to accept OTN License Agreement? Enter Y or y to agree, else N or n"
             }
         },
         "otnAccountUsername":{
             "type":"string",
             "metadata":{
                 "description":"Username for your Oracle Technology Network account"
             }
         },
         "otnAccountPassword":{
             "type":"securestring",
             "metadata":{
                 "description":"Password for your Oracle Technology Network account"
             }
         },
         "wlsDomainName":{
             "type":"string",
             "metadata":{
                 "description":"Provide Weblogic domain name"
             }
         },
         "wlsAdminURL":{
             "type":"string",
             "metadata":{
                 "description":"Administrator URL for the Weblogic domain to which the Node has to be added"
             }
         },
         "wlsUserName":{
             "type":"string",
             "metadata":{
                 "description":"Username for your Weblogic domain"
             }
         },
         "wlsPassword":{
             "type":"string",
             "metadata":{
                 "description":"Password for your Weblogic domain"
             }
         },
         "dnsLabelPrefix":{
             "type":"string",
             "metadata":{
                 "description":"Unique DNS Name for the Public IP used to access the Virtual Machine."
             }
         },
         "linuxOSVersion":{
             "type":"string",
             "defaultValue":"7.4",
             "allowedValues":[
                 "7.4",
                 "7.3"
             ],
             "metadata":{
                 "description":"The Oracle Linux version for the VM. This will pick a fully patched image of this given Oracle Linux version."
             }
         },
         "vmName": {
             "type":"string",
             "metadata":{
                 "description":"Virtual Machine (VM) Name"
             }
         },
         "location":{
             "type":"string",
             "defaultValue":"[resourceGroup().location]",
             "metadata":{
                 "description":"Location for all resources."
             }
         },
         "vmSizeSelect":{
             "type":"string",
             "defaultValue":"Standard_A3",
             "allowedValues":[
                 "Standard_A1",
                 "Standard_A2",
                 "Standard_A3",
                 "Standard_A4"
             ],
             "metadata":{
                 "description":"Select appropriate VM Size as per requirement (Standard_A1, Standard_A2, Standard_A3, Standard_A4)"
             }
         }    
     },
    "variables":{
        "storageAccountName":"[concat(uniquestring(resourceGroup().id), 'olvm')]",
        "imagePublisher":"Oracle",
        "imageOffer":"Oracle-Linux",
        "nicName":"[concat(parameters('vmName'),'_NIC')]",
        "addressPrefix":"10.0.0.0/16",
        "subnetName":"Subnet",
        "subnetPrefix":"10.0.0.0/24",
        "storageAccountType":"Standard_LRS",
        "publicIPAddressName":"[concat(parameters('vmName'),'_PublicIP')]",
        "publicIPAddressType":"Dynamic",
        "vmSize":"[parameters('vmSizeSelect')]",
        "virtualNetworkName":"olvmVNET",
        "ScriptFileName": "addNodeToDynamicCluster.sh",
        "linuxConfiguration":{
            "disablePasswordAuthentication":true,
            "ssh":{
                "publicKeys":[
                    {
                        "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData":"[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "subnetRef":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
    },
    "resources":[
        {
            "type":"Microsoft.Storage/storageAccounts",
            "apiVersion":"2018-11-01",
            "name":"[variables('storageAccountName')]",
            "location":"[parameters('location')]",
            "sku":{
                "name":"[variables('storageAccountType')]"
            },
            "kind":"Storage",
            "properties":{

            }
        },
        {
            "type":"Microsoft.Network/publicIPAddresses",
            "apiVersion":"2018-11-01",
            "name":"[variables('publicIPAddressName')]",
            "location":"[parameters('location')]",
            "properties":{
                "publicIPAllocationMethod":"[variables('publicIPAddressType')]",
                "dnsSettings":{
                    "domainNameLabel": "[concat(toLower(parameters('dnsLabelPrefix')),'-',toLower(resourceGroup().name),'-',toLower(parameters('wlsDomainName')))]"
                }
            }
        },
        {
            "type":"Microsoft.Network/virtualNetworks",
            "apiVersion":"2018-11-01",
            "name":"[variables('virtualNetworkName')]",
            "location":"[parameters('location')]",
            "properties":{
                "addressSpace":{
                    "addressPrefixes":[
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets":[
                    {
                        "name":"[variables('subnetName')]",
                        "properties":{
                            "addressPrefix":"[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type":"Microsoft.Network/networkInterfaces",
            "apiVersion":"2018-11-01",
            "name":"[variables('nicName')]",
            "location":"[parameters('location')]",
            "dependsOn":[
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties":{
                "ipConfigurations":[
                    {
                        "name":"[concat('ipconfig_',parameters('vmName'))]",
                        "properties":{
                            "privateIPAllocationMethod":"Dynamic",
                            "publicIPAddress":{
                                "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet":{
                                "id":"[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type":"Microsoft.Compute/virtualMachines",
            "apiVersion":"2018-10-01",
            "name":"[parameters('vmName')]",
            "location":"[parameters('location')]",
            "dependsOn":[
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties":{
                "hardwareProfile":{
                    "vmSize":"[variables('vmSize')]"
                },
                "osProfile":{
                    "computerName":"[parameters('vmName')]",
                    "adminUsername":"[parameters('adminUsername')]",
                    "adminPassword":"[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration":"[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile":{
                    "imageReference":{
                        "publisher":"[variables('imagePublisher')]",
                        "offer":"[variables('imageOffer')]",
                        "sku":"[parameters('linuxOSVersion')]",
                        "version":"latest"
                    },
                    "osDisk":{
                        "createOption":"FromImage"
                    },
                    "dataDisks":[
                        {
                            "diskSizeGB":900,
                            "lun":0,
                            "createOption":"Empty"
                        }
                    ]
                },
                "networkProfile":{
                    "networkInterfaces":[
                        {
                            "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile":{
                    "bootDiagnostics":{
                        "enabled":true,
                        "storageUri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        },
        {
            "type":"Microsoft.Compute/virtualMachines/extensions",
            "name":"[concat(parameters('vmName'),'/newuserscript')]",
            "apiVersion":"2019-07-01",
            "location":"[parameters('location')]",
            "dependsOn":[
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties":{
                "publisher":"Microsoft.Azure.Extensions",
                "type":"CustomScript",
                "typeHandlerVersion":"2.0",
                "autoUpgradeMinorVersion":true,
                "settings":{
                    "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat(variables('ScriptFileName'), parameters('_artifactsLocationSasToken')))]"
		    ],
		    "commandToExecute": "[concat('sh',' ',variables('ScriptFileName'),' ',parameters('acceptOTNLicenseAgreement'),' ',parameters('otnAccountUsername'),' ',parameters('otnAccountPassword'),' ',parameters('wlsDomainName'),' ',parameters('wlsAdminURL'),' ',parameters('wlsUserName'),' ',parameters('wlsPassword'))]"	
                }
            }
        }
    ],
    "outputs":{
        "wlsDomainLocation":{
            "type":"string",
            "value":"[concat('/u01/domains/', parameters('wlsDomainName'))]"
        }
    }
}
