{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "_artifactsLocation": {
         "type": "string",
         "metadata": {
            "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
         },
         "defaultValue": "${artifactsLocationBase}/arm-oraclelinux-wls-dynamic-cluster/${git.tag}/addnode/src/main/"
      },
      "_artifactsLocationSasToken": {
         "type": "securestring",
         "metadata": {
            "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
         },
         "defaultValue": ""
      },
      "aadsSettings": {
         "type": "object",
         "defaultValue": {
            "enable": false,
            "publicIP": "null",
            "serverHost": "null",
            "certificateBase64String": "null"
         },
         "metadata": {
            "description": "If enable is true, must specify all aadSettings. publicIP is the Azure Active Directory LDAP server public IP address. serverHost is the LDAP server host. certificateBase64String is based64 string of LADP client certificate that will be imported to trust store of WebLogic Server to enable SSL connection of AD provider."
         }
      },
      "adminPasswordOrKey": {
         "type": "securestring",
         "metadata": {
            "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
         }
      },
      "adminURL": {
         "type": "string",
         "metadata": {
            "description": "Provide admin URL with vm0_public_ip:7001"
         }
      },
      "adminUsername": {
         "type": "string",
         "defaultValue": "weblogic",
         "metadata": {
            "description": "User name for the Virtual Machine."
         }
      },
      "authenticationType": {
         "type": "string",
         "defaultValue": "password",
         "allowedValues": [
            "sshPublicKey",
            "password"
         ],
         "metadata": {
            "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
         }
      },
      "dnsLabelPrefix": {
         "type": "string",
         "defaultValue": "wls",
         "metadata": {
            "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
         }
      },
      "guidValue": {
         "type": "string",
         "defaultValue": "[newGuid()]"
      },
      "location": {
         "type": "string",
         "defaultValue": "[resourceGroup().location]",
         "metadata": {
            "description": "Location for all resources."
         }
      },
      "managedServerPrefix": {
         "type": "string",
         "defaultValue": "msp",
         "metadata": {
            "description": "Provide managed server prefix"
         }
      },
      "numberOfExistingNodes": {
         "type": "int",
         "minValue": 1,
         "maxValue": 20,
         "metadata": {
            "description": "The number of existing nodes, used to generate new managed server virtual machine name, including Admin Server Node."
         }
      },
      "numberOfNewNodes": {
         "type": "int",
         "defaultValue": 1,
         "minValue": 1,
         "maxValue": 20,
         "metadata": {
            "description": "The number of nodes to add."
         }
      },
      "skuUrnVersion": {
         "type": "string",
         "defaultValue": "owls-122130-8u131-ol74;Oracle:weblogic-122130-jdk8u131-ol74:owls-122130-8u131-ol7;latest",
         "allowedValues": [
            "owls-122130-8u131-ol73;Oracle:weblogic-122130-jdk8u131-ol73:owls-122130-8u131-ol7;latest",
            "owls-122130-8u131-ol74;Oracle:weblogic-122130-jdk8u131-ol74:owls-122130-8u131-ol7;latest",
            "owls-122140-8u251-ol76;Oracle:weblogic-122140-jdk8u251-ol76:owls-122140-8u251-ol7;latest",
            "owls-141100-8u251-ol76;Oracle:weblogic-141100-jdk8u251-ol76:owls-141100-8u251-ol7;latest",
            "owls-141100-11_07-ol76;Oracle:weblogic-141100-jdk11_07-ol76:owls-141100-11_07-ol7;latest"
         ],
         "metadata": {
            "description": "The Oracle Linux image with Weblogic and Java preinstalled. Semicolon separated string of Sku, URN, and Version"
         }
      },
      "storageAccountName": {
         "type": "string",
         "metadata": {
            "description": "Name of storage account. One storage account can store 20 vitual machines with 2 VHDs of 500 IOPS."
         }
      },
      "usePreviewImage": {
         "type": "bool",
         "defaultValue": false,
         "metadata": {
            "description": "Bool value, if it's set to true, will deploy with preview weblogic image."
         }
      },
      "vmSizeSelect": {
         "type": "string",
         "defaultValue": "Standard_A3",
         "metadata": {
            "description": "Select appropriate VM Size as per requirement"
         }
      },
      "wlsDomainName": {
         "type": "string",
         "defaultValue": "wlsd",
         "metadata": {
            "description": "Provide existing running Weblogic domain name"
         }
      },
      "wlsUserName": {
         "type": "string",
         "metadata": {
            "description": "Username for your Weblogic domain name"
         }
      },
      "wlsPassword": {
         "type": "securestring",
         "metadata": {
            "description": "Password for your Weblogic domain name"
         }
      }
   },
   "variables": {
      "const_hyphen": "-",
      "const_imageOffer": "[concat('weblogic',variables('const_hyphen'), split(variables('name_linuxImageOfferSKU'),variables('const_hyphen'))[1],variables('const_hyphen'),'jdk',split(variables('name_linuxImageOfferSKU'),variables('const_hyphen'))[2],variables('const_hyphen'),split(variables('name_linuxImageOfferSKU'),variables('const_hyphen'))[3],if(parameters('usePreviewImage'),'-preview',''))]",
      "const_imagePublisher": "oracle",
      "const_linuxConfiguration": {
         "disablePasswordAuthentication": true,
         "ssh": {
            "publicKeys": [
               {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPasswordOrKey')]"
               }
            ]
         }
      },
      "const_mountPointPath": "[concat('/mnt/', variables('name_share'))]",
      "const_publicIPAddressType": "Dynamic",
      "const_vmSize": "[parameters('vmSizeSelect')]",
      "const_wlsHome": "/u01/app/wls/install/oracle/middleware/oracle_home",
      "const_wlsDomainPath": "/u01/domains",
      "name_linuxImageOfferSKU": "[first(split(parameters('skuUrnVersion'), ';'))]",
      "name_linuxImageVersion": "[last(split(parameters('skuUrnVersion'),';'))]",
      "name_nic": "_NIC",
      "name_publicIPAddress": "_PublicIP",
      "name_scriptFile": "addNodeToDynamicCluster.sh",
      "name_share": "wlsshare",
      "name_subnet": "Subnet",
      "name_virtualNetwork": "[concat(parameters('wlsDomainName'),'_VNET')]",
      "name_vmMachine": "[concat(parameters('managedServerPrefix'),'VM')]",
      "ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('name_subnet'))]"
   },
   "resources": [
      {
         "apiVersion": "2019-10-01",
         "name": "${dynamic.addnode.start}",
         "type": "Microsoft.Resources/deployments",
         "properties": {
            "mode": "Incremental",
            "template": {
               "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion": "1.0.0.0",
               "resources": []
            }
         }
      },
      {
         "type": "Microsoft.Network/publicIPAddresses",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('name_vmMachine'),copyIndex(parameters('numberOfExistingNodes')),variables('name_publicIPAddress'))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "publicIPLoop",
            "count": "[parameters('numberOfNewNodes')]"
         },
         "properties": {
            "publicIPAllocationMethod": "[variables('const_publicIPAddressType')]",
            "dnsSettings": {
               "domainNameLabel": "[concat(toLower(parameters('dnsLabelPrefix')),copyindex(),'-',take(replace(parameters('guidValue'),'-',''),10),'-',toLower(parameters('wlsDomainName')))]"
            }
         }
      },
      {
         "type": "Microsoft.Network/virtualNetworks/subnets",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('name_virtualNetwork'), '/', variables('name_subnet'))]",
         "condition": "[and(empty(variables('name_virtualNetwork')), empty(variables('name_subnet')))]"
      },
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2020-03-01",
         "name": "[concat(variables('name_vmMachine'),copyIndex(parameters('numberOfExistingNodes')), variables('name_nic'))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "nicLoop",
            "count": "[parameters('numberOfNewNodes')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('name_vmMachine'),copyIndex(parameters('numberOfExistingNodes')),variables('name_publicIPAddress')))]"
         ],
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "privateIPAllocationMethod": "Dynamic",
                     "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('name_vmMachine'),copyIndex(parameters('numberOfExistingNodes')),variables('name_publicIPAddress')))]"
                     },
                     "subnet": {
                        "id": "[variables('ref_subnet')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2018-10-01",
         "name": "[concat(variables('name_vmMachine'), copyIndex(parameters('numberOfExistingNodes')))]",
         "location": "[parameters('location')]",
         "copy": {
            "name": "virtualMachineLoop",
            "count": "[parameters('numberOfNewNodes')]"
         },
         "dependsOn": [
            "nicLoop"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "[variables('const_vmSize')]"
            },
            "osProfile": {
               "computerName": "[concat(variables('name_vmMachine'), copyIndex(parameters('numberOfExistingNodes')))]",
               "adminUsername": "[parameters('adminUsername')]",
               "adminPassword": "[parameters('adminPasswordOrKey')]",
               "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('const_linuxConfiguration'))]"
            },
            "storageProfile": {
               "imageReference": {
                  "publisher": "[variables('const_imagePublisher')]",
                  "offer": "[variables('const_imageOffer')]",
                  "sku": "[variables('name_linuxImageOfferSKU')]",
                  "version": "[variables('name_linuxImageVersion')]"
               },
               "osDisk": {
                  "createOption": "FromImage",
                  "managedDisk": {
                     "storageAccountType": "Standard_LRS"
                  }
               },
               "dataDisks": [
                  {
                     "lun": 0,
                     "createOption": "FromImage",
                     "diskSizeGB": 900,
                     "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                     }
                  }
               ]
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('name_vmMachine'), copyIndex(parameters('numberOfExistingNodes')), variables('name_nic')))]"
                  }
               ]
            },
            "diagnosticsProfile": {
               "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2019-06-01').primaryEndpoints.blob]"
               }
            }
         },
         "plan": {
            "name": "[variables('name_linuxImageOfferSKU')]",
            "publisher": "[variables('const_imagePublisher')]",
            "product": "[variables('const_imageOffer')]"
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines/extensions",
         "name": "[concat(variables('name_vmMachine'), copyIndex(parameters('numberOfExistingNodes')), '/newuserscript')]",
         "apiVersion": "2019-12-01",
         "location": "[parameters('location')]",
         "copy": {
            "name": "virtualMachineExtensionLoop",
            "count": "[parameters('numberOfNewNodes')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('name_vmMachine'), copyIndex(parameters('numberOfExistingNodes'))))]"
         ],
         "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
               "fileUris": [
                  "[uri(parameters('_artifactsLocation'), concat('scripts/', variables('name_scriptFile'), parameters('_artifactsLocationSasToken')))]"
               ]
            },
            "protectedSettings": {
               "commandToExecute": "[concat('sh',' ',variables('name_scriptFile'),' ',parameters('wlsDomainName'),' ',parameters('wlsUserName'),' ',parameters('wlsPassword'),' ',concat(parameters('managedServerPrefix'), copyIndex(parameters('numberOfExistingNodes'))),' ', parameters('adminURL'),' ',variables('const_wlsHome'),' ',variables('const_wlsDomainPath'),' ',parameters('storageAccountName'), ' ', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-04-01').keys[0].value,' ', variables('const_mountPointPath'),' ', if(parameters('aadsSettings').enable, parameters('aadsSettings').certificateBase64String, 'null'),' ',if(parameters('aadsSettings').enable, parameters('aadsSettings').publicIP, 'null'),' ', if(parameters('aadsSettings').enable, parameters('aadsSettings').serverHost, 'null'),' ', parameters('adminPasswordOrKey'))]"
            }
         }
      },
      {
         "apiVersion": "2019-10-01",
         "name": "${dynamic.addnode.end}",
         "type": "Microsoft.Resources/deployments",
         "dependsOn": [
            "virtualMachineExtensionLoop"
         ],
         "properties": {
            "mode": "Incremental",
            "template": {
               "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion": "1.0.0.0",
               "resources": []
            }
         }
      }
   ],
   "outputs": {
      "wlsDomainLocation": {
         "type": "string",
         "value": "[concat('/u01/domains/', parameters('wlsDomainName'))]"
      }
   }
}